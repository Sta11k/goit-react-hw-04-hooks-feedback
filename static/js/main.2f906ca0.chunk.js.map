{"version":3,"sources":["componets/Statistics/Statistics.module.css","componets/FeedbackOptions/FeedbackOptions.module.css","componets/Section/Section.module.css","componets/Section/Section.js","componets/FeedbackOptions/FeedbackOptions.js","componets/Notification/Notification.js","componets/Statistics/Statistics.js","options/options.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","FeedbackBtn","options","onLeaveFeedback","console","log","list","map","btnName","item","button","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","value","nameBtn","App","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackOptions","event","label","target","textContent","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,MAAQ,4B,iBCA1BD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,kBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,+HCGvDC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MAKPF,EAAQM,aAAe,CACrBL,MAAO,GACPC,SAAU,IAQGF,Q,gBCOAO,EA1BK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAE9B,OADAC,QAAQC,IAAI,OAAQH,GAElB,oBAAIL,UAAWC,IAAEQ,KAAjB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,oBAAIX,UAAWC,IAAEW,KAAjB,SACE,wBACEZ,UAAWC,IAAEY,OACbC,KAAK,SACLC,QAAST,EAHX,SAKGK,KANuBA,SCRhCK,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAab,aAAe,CAC1Bc,QAAS,IAOID,Q,gBCwCAE,EA/CI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACGD,EACC,+BACE,oBAAItB,UAAWC,IAAEW,KAAjB,SACE,uCACQ,sBAAMZ,UAAWC,IAAEuB,MAAnB,SAA2BL,SAGrC,oBAAInB,UAAWC,IAAEW,KAAjB,SACE,0CACW,sBAAMZ,UAAWC,IAAEuB,MAAnB,SAA2BJ,SAGxC,oBAAIpB,UAAWC,IAAEW,KAAjB,SACE,sCACO,sBAAMZ,UAAWC,IAAEuB,MAAnB,SAA2BH,SAGpC,oBAAIrB,UAAWC,IAAEW,KAAjB,SACE,wCACS,sBAAMZ,UAAWC,IAAEuB,MAAnB,SAA2BF,SAGtC,oBAAItB,UAAWC,IAAEW,KAAjB,SACE,mDACqB,IACnB,uBAAMZ,UAAWC,IAAEuB,MAAnB,UAA2BD,EAA3B,eAKN,cAAC,EAAD,CAAcN,QAAS,yBCtClBQ,EAAU,CAAC,OAAQ,UAAW,OC4D5BC,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAsBMC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAS1B,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAACkC,EAAD,CAAiB3B,QAASoB,EAASnB,gBAjCjB,SAAC2B,GACvB,IAAIC,EAAQD,EAAME,OAAOC,YAEzB,OADA7B,QAAQC,IAAI,QAAS0B,GACbA,GACN,IAAK,OACHN,GAAQ,SAACS,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHR,GAAW,SAACS,GAAD,OAAkBA,EAAe,KAC5C,MACF,IAAK,MACHR,GAAO,SAACS,GAAD,OAAcA,EAAW,WAwBlC,cAAC,EAAD,CAASzC,MAAM,aAAf,SACE,cAAC,EAAD,CACEqB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAhBUiB,KAAKC,MAAOtB,EAAOY,IAAwB,MAAQ,U,YC9BvEW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f906ca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"Statistics_value__2_Ujf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__21wRb\",\"item\":\"FeedbackOptions_item__1BOck\",\"button\":\"FeedbackOptions_button__3Me3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1lGZg\",\"title\":\"Section_title__dspb2\"};","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;","import PropTypes from \"prop-types\";\n\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackBtn = ({ options, onLeaveFeedback }) => {\n  console.log(\" BTN\", options);\n  return (\n    <ul className={s.list}>\n      {options.map((btnName) => {\n        return (\n          <li className={s.item} key={btnName}>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={onLeaveFeedback}\n            >\n              {btnName}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackBtn.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackBtn;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;","import PropTypes from \"prop-types\";\nimport Notification from \"../Notification\";\n\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total ? (\n        <ul>\n          <li className={s.item}>\n            <p>\n              Good: <span className={s.value}>{good}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Neutral: <span className={s.value}>{neutral}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Bad: <span className={s.value}>{bad}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Total: <span className={s.value}>{total}</span>\n            </p>\n          </li>\n          <li className={s.item}>\n            <p>\n              Positive feedback:{\" \"}\n              <span className={s.value}>{positivePercentage}%</span>\n            </p>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={\"No feedback given\"} />\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","export const nameBtn = [\"good\", \"neutral\", \"bad\"];\r\n","import { useState } from \"react\";\r\nimport Section from \"./componets/Section\";\r\nimport FeedbackOptions from \"./componets/FeedbackOptions\";\r\nimport Statistics from \"./componets/Statistics\";\r\n\r\nimport { nameBtn } from \"./options/options\";\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = (event) => {\r\n    let label = event.target.textContent;\r\n    console.log(\"label\", label);\r\n    switch (label) {\r\n      case \"good\":\r\n        setGood((prevGood) => (prevGood += 1));\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevNeutral) => (prevNeutral += 1));\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevBad) => (prevBad += 1));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // this.setState((prevState) => ({ [label]: (prevState[label] += 1) }));\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const percent = Math.round((good / countTotalFeedback()) * 100) || 0;\r\n\r\n    return percent;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={nameBtn} onLeaveFeedback={onLeaveFeedback} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={countPositiveFeedbackPercentage()}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}